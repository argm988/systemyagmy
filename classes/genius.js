const e=require("cheerio"),r=require(process.cwd()+"/config/conf.json"),t=require("node-fetch");module.exports=class{constructor(e){e||console.error("An access token is needed to use the Genius api!"),this.aT=e}request(e){let n={method:"GET",headers:{Authorization:"Bearer "+this.aT}};const s=new URLSearchParams(e.query);return new Promise((o,i)=>{t(`${r.genius.api.baseUrl||"https://api.genius.com/"}${e.url}?${s.toString()}`,n).then(async e=>{let r=await e.json();if(200!==e.status)return i(r);o(r.response)})})}search(e){return this.request({url:"search",query:{q:e}})}getSong(e){return this.search(e.replace(/\([^)]*\)/g,"")).then(r=>{let t=r.hits.find(r=>"song"===r.type&&r.result.full_title.split(" ").map(e=>e.toLowerCase()).some(r=>e.split(" ").map(e=>e.toLowerCase()).includes(r)));if(t)return t;throw new Error(`Did not find any songs with name "${e}".`)})}getSongLyrics(r){return t(r,{method:"GET"}).then(e=>{if(e.ok)return e.text();throw new Error("Song url not found!")}).then(t=>{return{lyrics:e.load(t)(".lyrics").text().replace(/\[[^\]]*]/g,"").replace(/\n\s*\n/g,"\n\n").trim(),url:r}})}};